#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import os
import sys
from article_writer import ArticleWriter

def test_title_and_formatting_fixes():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
    if not os.getenv('OPENAI_API_KEY'):
        print("‚ùå OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return False
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_analysis = {
        'main_theme': '–ë–µ–π –∏–ª–∏ –±–µ–≥–∏: —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ —Å—Ç—Ä–µ—Å—Å',
        'main_message': '–ü–æ–Ω–∏–º–∞–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ "–±–µ–π –∏–ª–∏ –±–µ–≥–∏" –ø–æ–º–æ–≥–∞–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —Å—Ç—Ä–µ—Å—Å–æ–º',
        'interesting_facts': [
            '–†–µ–∞–∫—Ü–∏—è "–±–µ–π –∏–ª–∏ –±–µ–≥–∏" - –¥—Ä–µ–≤–Ω–∏–π –º–µ—Ö–∞–Ω–∏–∑–º –≤—ã–∂–∏–≤–∞–Ω–∏—è',
            '–°—Ç—Ä–µ—Å—Å –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Å–∏–º–ø–∞—Ç–∏—á–µ—Å–∫—É—é –Ω–µ—Ä–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É',
            '–•—Ä–æ–Ω–∏—á–µ—Å–∫–∏–π —Å—Ç—Ä–µ—Å—Å –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –∏—Å—Ç–æ—â–µ–Ω–∏—é'
        ],
        'hidden_truths': [
            '–ù–µ –≤—Å–µ —Å—Ç—Ä–µ—Å—Å–æ–≤—ã–µ —Ä–µ–∞–∫—Ü–∏–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã',
            '–†–µ–∞–∫—Ü–∏—è "–±–µ–π –∏–ª–∏ –±–µ–≥–∏" –º–æ–∂–µ—Ç –±—ã—Ç—å –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–π',
            '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å—Ç—Ä–µ—Å—Å —á–∞—Å—Ç–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π —Ä–µ–∞–∫—Ü–∏–∏'
        ],
        'practical_advice': [
            '–¢–µ—Ö–Ω–∏–∫–∞ 4-7-8 –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —É—Å–ø–æ–∫–æ–µ–Ω–∏—è',
            '–ü—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –º—ã—à–µ—á–Ω–∞—è —Ä–µ–ª–∞–∫—Å–∞—Ü–∏—è',
            '–î—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è'
        ]
    }
    
    print("üß™ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –ó–ê–ì–û–õ–û–í–ö–û–í –ò –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 60)
    
    try:
        writer = ArticleWriter()
        print("‚úÖ ArticleWriter –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏
        print("\nüìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç—å–∏ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏...")
        article = writer.write_adapted_article_enhanced(test_analysis)
        
        if article:
            print("\n‚úÖ –°–¢–ê–¢–¨–Ø –£–°–ü–ï–®–ù–û –°–ì–ï–ù–ï–†–ò–†–û–í–ê–ù–ê –ò –û–¢–§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ê!")
            print("=" * 60)
            
            # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            print(f"üì∞ –ó–∞–≥–æ–ª–æ–≤–æ–∫: {article['title']}")
            print(f"üìè –î–ª–∏–Ω–∞: {len(article['content'])} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"üìù –°–ª–æ–≤: {article['word_count']}")
            print(f"üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {article['category']}")
            print(f"üîñ –¢–µ–≥–∏: {', '.join(article['tags'])}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
            short_desc = article.get('short_description', '')
            print(f"üìÑ –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: {short_desc[:100]}...")
            
            # –ê–Ω–∞–ª–∏–∑ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
            print("\nüîç –ê–ù–ê–õ–ò–ó –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô:")
            print("-" * 50)
            
            content = article['content']
            
            # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ "–±–æ–π –∏–ª–∏ –±–µ–≥–∏" ‚Üí "–ë–µ–π –∏–ª–∏ –±–µ–≥–∏"
            title_correct = '–±–æ–π –∏–ª–∏ –±–µ–≥–∏' not in article['title'].lower()
            title_has_correct = '–ë–µ–π –∏–ª–∏ –±–µ–≥–∏' in article['title']
            print(f"‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω: {'–î–ê' if title_correct and title_has_correct else '–ù–ï–¢'} - {article['title']}")
            
            # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ "–í–≤–µ–¥–µ–Ω–∏–µ" –≤ –∫—Ä–∞—Ç–∫–æ–º –æ–ø–∏—Å–∞–Ω–∏–∏
            no_introduction_in_desc = '–≤–≤–µ–¥–µ–Ω–∏–µ' not in short_desc.lower()
            print(f"‚úÖ –ù–µ—Ç '–í–≤–µ–¥–µ–Ω–∏–µ' –≤ –æ–ø–∏—Å–∞–Ω–∏–∏: {'–î–ê' if no_introduction_in_desc else '–ù–ï–¢'}")
            
            # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Ç–µ—Ö–Ω–∏–∫
            tech_start = content.find('<h2>–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏</h2>')
            if tech_start != -1:
                tech_section = content[tech_start:tech_start + 1000]
                has_ul_li = '<ul>' in tech_section and '<li>' in tech_section
                has_strong = '<strong>' in tech_section
                no_asterisks = '**' not in tech_section
                tech_properly_formatted = has_ul_li and has_strong and no_asterisks
            else:
                tech_properly_formatted = False
            print(f"‚úÖ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω—ã: {'–î–ê' if tech_properly_formatted else '–ù–ï–¢'}")
            
            # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ H1
            has_h1 = '<h1>' in content and '</h1>' in content
            print(f"‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ H1: {'–ï–°–¢–¨' if has_h1 else '–ù–ï–¢'}")
            
            # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ª–∏—à–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            bad_elements = ['**–û–ø–∏—Å–∞–Ω–∏–µ:**', '**–°—Ç–∞—Ç—å—è:**', '**–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:**', '–†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞:', 'A-', 'A+']
            found_bad = [elem for elem in bad_elements if elem in content]
            print(f"‚ùå –õ–∏—à–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã: {len(found_bad)}/{len(bad_elements)} - {found_bad}")
            
            # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º HTML-—Ç–µ–≥–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
            html_tags = ['<h2>–í–≤–µ–¥–µ–Ω–∏–µ</h2>', '<h2>–ê–Ω–∞–ª–∏–∑ –ø—Ä–∏—á–∏–Ω</h2>', '<h2>–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏</h2>', '<h2>–ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ –∏ –≤—ã–≤–æ–¥—ã</h2>', '<h2>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h2>']
            found_tags = [tag for tag in html_tags if tag in content]
            print(f"‚úÖ HTML-–∑–∞–≥–æ–ª–æ–≤–∫–∏: {len(found_tags)}/{len(html_tags)} - {found_tags}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã
            print("\nüìÑ –§–†–ê–ì–ú–ï–ù–¢–´ –°–¢–ê–¢–¨–ò:")
            print("-" * 50)
            print("–ù–ê–ß–ê–õ–û –°–¢–ê–¢–¨–ò (–ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤):")
            print(content[:500] + "...")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏
            if tech_start != -1:
                print("\n–ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –¢–ï–•–ù–ò–ö–ò:")
                tech_end = content.find('<h2>', tech_start + 1)
                if tech_end == -1:
                    tech_end = tech_start + 1200
                print(content[tech_start:tech_end] + "...")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º FAQ —Ä–∞–∑–¥–µ–ª
            faq_start = content.find('<h2>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h2>')
            if faq_start != -1:
                print("\nFAQ –†–ê–ó–î–ï–õ:")
                faq_end = content.find('</ul>', faq_start) + 5
                if faq_end > faq_start:
                    print(content[faq_start:faq_end])
                else:
                    print(content[faq_start:faq_start + 800] + "...")
            
            # –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
            fixes_score = 0
            if title_correct and title_has_correct:
                fixes_score += 2  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω
            if no_introduction_in_desc:
                fixes_score += 2  # –ù–µ—Ç "–í–≤–µ–¥–µ–Ω–∏–µ" –≤ –æ–ø–∏—Å–∞–Ω–∏–∏
            if tech_properly_formatted:
                fixes_score += 2  # –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω—ã
            if has_h1:
                fixes_score += 1  # –ï—Å—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ H1
            if len(found_bad) == 0:
                fixes_score += 1  # –ù–µ—Ç –ª–∏—à–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            if len(found_tags) >= 4:
                fixes_score += 2  # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ HTML-–∑–∞–≥–æ–ª–æ–≤–∫–∏
            
            print(f"\nüéØ –û–¶–ï–ù–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô: {fixes_score}/10")
            
            if fixes_score >= 9:
                print("üåü –û–¢–õ–ò–ß–ù–û! –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –∏–¥–µ–∞–ª—å–Ω–æ")
            elif fixes_score >= 7:
                print("üëç –•–û–†–û–®–û! –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞—é—Ç")
            elif fixes_score >= 5:
                print("‚ö†Ô∏è –£–î–û–í–õ–ï–¢–í–û–†–ò–¢–ï–õ–¨–ù–û! –ï—Å—Ç—å —É–ª—É—á—à–µ–Ω–∏—è, –Ω–æ –Ω—É–∂–Ω—ã –¥–æ—Ä–∞–±–æ—Ç–∫–∏")
            else:
                print("‚ùå –ü–õ–û–•–û! –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–µ–±—É—é—Ç —Å–µ—Ä—å–µ–∑–Ω–æ–π –¥–æ—Ä–∞–±–æ—Ç–∫–∏")
            
            # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏
            print(f"\nüìä –°–†–ê–í–ù–ï–ù–ò–ï –° –ü–†–ï–î–´–î–£–©–ò–ú–ò –ü–†–û–ë–õ–ï–ú–ê–ú–ò:")
            print("-" * 50)
            print(f"‚ùå –ë—ã–ª–æ: '–±–æ–π –∏–ª–∏ –±–µ–≥–∏' - {'–ò–°–ü–†–ê–í–õ–ï–ù–û' if title_correct and title_has_correct else '–ù–ï –ò–°–ü–†–ê–í–õ–ï–ù–û'}")
            print(f"‚ùå –ë—ã–ª–æ: '–í–≤–µ–¥–µ–Ω–∏–µ' –≤ –∫—Ä–∞—Ç–∫–æ–º –æ–ø–∏—Å–∞–Ω–∏–∏ - {'–ò–°–ü–†–ê–í–õ–ï–ù–û' if no_introduction_in_desc else '–ù–ï –ò–°–ü–†–ê–í–õ–ï–ù–û'}")
            print(f"‚ùå –ë—ã–ª–æ: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫ - {'–ò–°–ü–†–ê–í–õ–ï–ù–û' if tech_properly_formatted else '–ù–ï –ò–°–ü–†–ê–í–õ–ï–ù–û'}")
            print(f"‚ùå –ë—ã–ª–æ: –°–ø–∏—Å–∫–∏ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É - {'–ò–°–ü–†–ê–í–õ–ï–ù–û' if tech_properly_formatted else '–ù–ï –ò–°–ü–†–ê–í–õ–ï–ù–û'}")
            print(f"‚úÖ –°—Ç–∞–ª–æ: –ß–∏—Å—Ç–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º - {'–î–ê' if fixes_score >= 8 else '–ù–ï–¢'}")
                
            return True
            
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç—å–∏")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = test_title_and_formatting_fixes()
    sys.exit(0 if success else 1)
