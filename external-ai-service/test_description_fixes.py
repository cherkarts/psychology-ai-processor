#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∫—Ä–∞—Ç–∫–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Å—Ç–∞—Ç—å–∏
"""

import os
import sys
from article_writer import ArticleWriter

def test_description_fixes():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—Ä–∞—Ç–∫–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
    if not os.getenv('OPENAI_API_KEY'):
        print("‚ùå OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return False
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_analysis = {
        'main_theme': '–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è —Å–Ω—è—Ç–∏—è —Å—Ç—Ä–µ—Å—Å–∞',
        'main_message': '–¢–µ—Ö–Ω–∏–∫–∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–º–æ–≥–∞—é—Ç –±—ã—Å—Ç—Ä–æ —Å–Ω—è—Ç—å —Å—Ç—Ä–µ—Å—Å –∏ —Ç—Ä–µ–≤–æ–≥—É',
        'interesting_facts': [
            '–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Ç–µ –∂–µ —É—á–∞—Å—Ç–∫–∏ –º–æ–∑–≥–∞, —á—Ç–æ –∏ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è',
            '–ú–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–∑—ã –≤–ª–∏—è—é—Ç –Ω–∞ —Ñ–∏–∑–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã',
            '–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–º–æ–≥–∞–µ—Ç —Å–Ω–∏–∑–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å –∫–æ—Ä—Ç–∏–∑–æ–ª–∞'
        ],
        'hidden_truths': [
            '–ù–µ –≤—Å–µ —Ç–µ—Ö–Ω–∏–∫–∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–¥–∏–Ω–∞–∫–æ–≤–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã',
            '–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç —Ä–µ–≥—É–ª—è—Ä–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏',
            '–ú–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–∑—ã –º–æ–≥—É—Ç –±—ã—Ç—å –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ–¥ –ª–∏—á–Ω—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è'
        ],
        'practical_advice': [
            '–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª—è–∂–∞ –¥–ª—è —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏—è',
            '–¢–µ—Ö–Ω–∏–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –º–µ—Å—Ç–∞',
            '–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—Ö–∞ –¥–ª—è –º–æ—Ç–∏–≤–∞—Ü–∏–∏'
        ]
    }
    
    print("üß™ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –ö–†–ê–¢–ö–û–ì–û –û–ü–ò–°–ê–ù–ò–Ø")
    print("=" * 60)
    
    try:
        writer = ArticleWriter()
        print("‚úÖ ArticleWriter –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏ –æ–ø–∏—Å–∞–Ω–∏—è
        print("\nüìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç—å–∏ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏ –æ–ø–∏—Å–∞–Ω–∏—è...")
        article = writer.write_adapted_article_enhanced(test_analysis)
        
        if article:
            print("\n‚úÖ –°–¢–ê–¢–¨–Ø –£–°–ü–ï–®–ù–û –°–ì–ï–ù–ï–†–ò–†–û–í–ê–ù–ê –ò –û–¢–§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ê!")
            print("=" * 60)
            
            # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            print(f"üì∞ –ó–∞–≥–æ–ª–æ–≤–æ–∫: {article['title']}")
            print(f"üìè –î–ª–∏–Ω–∞: {len(article['content'])} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"üìù –°–ª–æ–≤: {article['word_count']}")
            print(f"üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {article['category']}")
            print(f"üîñ –¢–µ–≥–∏: {', '.join(article['tags'])}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
            short_desc = article.get('short_description', '')
            print(f"üìÑ –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: {short_desc}")
            
            # –ê–Ω–∞–ª–∏–∑ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –æ–ø–∏—Å–∞–Ω–∏—è
            print("\nüîç –ê–ù–ê–õ–ò–ó –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –û–ü–ò–°–ê–ù–ò–Ø:")
            print("-" * 50)
            
            content = article['content']
            
            # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ "–ü—Ä–∏–º–µ—Ä" –≤ –∫—Ä–∞—Ç–∫–æ–º –æ–ø–∏—Å–∞–Ω–∏–∏
            no_example_in_desc = '–ø—Ä–∏–º–µ—Ä' not in short_desc.lower()
            print(f"‚úÖ –ù–µ—Ç '–ü—Ä–∏–º–µ—Ä' –≤ –æ–ø–∏—Å–∞–Ω–∏–∏: {'–î–ê' if no_example_in_desc else '–ù–ï–¢'}")
            
            # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ "–í–≤–µ–¥–µ–Ω–∏–µ" –≤ –∫—Ä–∞—Ç–∫–æ–º –æ–ø–∏—Å–∞–Ω–∏–∏
            no_introduction_in_desc = '–≤–≤–µ–¥–µ–Ω–∏–µ' not in short_desc.lower()
            print(f"‚úÖ –ù–µ—Ç '–í–≤–µ–¥–µ–Ω–∏–µ' –≤ –æ–ø–∏—Å–∞–Ω–∏–∏: {'–î–ê' if no_introduction_in_desc else '–ù–ï–¢'}")
            
            # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∑–≤–µ–∑–¥–æ—á–µ–∫ –≤ –∫—Ä–∞—Ç–∫–æ–º –æ–ø–∏—Å–∞–Ω–∏–∏
            no_asterisks_in_desc = '**' not in short_desc
            print(f"‚úÖ –ù–µ—Ç –∑–≤–µ–∑–¥–æ—á–µ–∫ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏: {'–î–ê' if no_asterisks_in_desc else '–ù–ï–¢'}")
            
            # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –∫—Ä–∞—Ç–∫–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è (–¥–æ 150 —Å–∏–º–≤–æ–ª–æ–≤)
            desc_length_ok = len(short_desc) <= 150
            print(f"‚úÖ –î–ª–∏–Ω–∞ –æ–ø–∏—Å–∞–Ω–∏—è OK (‚â§150): {'–î–ê' if desc_length_ok else '–ù–ï–¢'} - {len(short_desc)} —Å–∏–º–≤–æ–ª–æ–≤")
            
            # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
            desc_starts_well = not short_desc.startswith(('**', '–ü—Ä–∏–º–µ—Ä', '–í–≤–µ–¥–µ–Ω–∏–µ', '*'))
            print(f"‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ö–æ—Ä–æ—à–æ: {'–î–ê' if desc_starts_well else '–ù–ï–¢'}")
            
            # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ H1
            has_h1 = '<h1>' in content and '</h1>' in content
            print(f"‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ H1: {'–ï–°–¢–¨' if has_h1 else '–ù–ï–¢'}")
            
            # 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ª–∏—à–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            bad_elements = ['**–û–ø–∏—Å–∞–Ω–∏–µ:**', '**–°—Ç–∞—Ç—å—è:**', '**–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:**', '–†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞:', 'A-', 'A+']
            found_bad = [elem for elem in bad_elements if elem in content]
            print(f"‚ùå –õ–∏—à–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã: {len(found_bad)}/{len(bad_elements)} - {found_bad}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã
            print("\nüìÑ –§–†–ê–ì–ú–ï–ù–¢–´ –°–¢–ê–¢–¨–ò:")
            print("-" * 50)
            print("–ù–ê–ß–ê–õ–û –°–¢–ê–¢–¨–ò (–ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤):")
            print(content[:500] + "...")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏
            tech_start = content.find('<h2>–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏</h2>')
            if tech_start != -1:
                print("\n–ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –¢–ï–•–ù–ò–ö–ò:")
                tech_end = content.find('<h2>', tech_start + 1)
                if tech_end == -1:
                    tech_end = tech_start + 1200
                print(content[tech_start:tech_end] + "...")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º FAQ —Ä–∞–∑–¥–µ–ª
            faq_start = content.find('<h2>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h2>')
            if faq_start != -1:
                print("\nFAQ –†–ê–ó–î–ï–õ:")
                faq_end = content.find('</ul>', faq_start) + 5
                if faq_end > faq_start:
                    print(content[faq_start:faq_end])
                else:
                    print(content[faq_start:faq_start + 800] + "...")
            
            # –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –æ–ø–∏—Å–∞–Ω–∏—è
            desc_score = 0
            if no_example_in_desc:
                desc_score += 2  # –ù–µ—Ç "–ü—Ä–∏–º–µ—Ä" –≤ –æ–ø–∏—Å–∞–Ω–∏–∏
            if no_introduction_in_desc:
                desc_score += 2  # –ù–µ—Ç "–í–≤–µ–¥–µ–Ω–∏–µ" –≤ –æ–ø–∏—Å–∞–Ω–∏–∏
            if no_asterisks_in_desc:
                desc_score += 2  # –ù–µ—Ç –∑–≤–µ–∑–¥–æ—á–µ–∫ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏
            if desc_length_ok:
                desc_score += 2  # –î–ª–∏–Ω–∞ –æ–ø–∏—Å–∞–Ω–∏—è OK
            if desc_starts_well:
                desc_score += 2  # –û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ö–æ—Ä–æ—à–æ
            
            print(f"\nüéØ –û–¶–ï–ù–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –û–ü–ò–°–ê–ù–ò–Ø: {desc_score}/10")
            
            if desc_score >= 9:
                print("üåü –û–¢–õ–ò–ß–ù–û! –û–ø–∏—Å–∞–Ω–∏–µ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Å—Ç–∞—Ç—å–∏")
            elif desc_score >= 7:
                print("üëç –•–û–†–û–®–û! –û–ø–∏—Å–∞–Ω–∏–µ —Ö–æ—Ä–æ—à–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏")
            elif desc_score >= 5:
                print("‚ö†Ô∏è –£–î–û–í–õ–ï–¢–í–û–†–ò–¢–ï–õ–¨–ù–û! –û–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–µ–±—É–µ—Ç –Ω–µ–±–æ–ª—å—à–∏—Ö –¥–æ—Ä–∞–±–æ—Ç–æ–∫")
            else:
                print("‚ùå –ü–õ–û–•–û! –û–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–µ–±—É–µ—Ç —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π")
            
            # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏
            print(f"\nüìä –°–†–ê–í–ù–ï–ù–ò–ï –° –ü–†–ï–î–´–î–£–©–ò–ú–ò –ü–†–û–ë–õ–ï–ú–ê–ú–ò:")
            print("-" * 50)
            print(f"‚ùå –ë—ã–ª–æ: '*–ü—Ä–∏–º–µ—Ä*:' –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ - {'–ò–°–ü–†–ê–í–õ–ï–ù–û' if no_example_in_desc else '–ù–ï –ò–°–ü–†–ê–í–õ–ï–ù–û'}")
            print(f"‚ùå –ë—ã–ª–æ: '–í–≤–µ–¥–µ–Ω–∏–µ' –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ - {'–ò–°–ü–†–ê–í–õ–ï–ù–û' if no_introduction_in_desc else '–ù–ï –ò–°–ü–†–ê–í–õ–ï–ù–û'}")
            print(f"‚ùå –ë—ã–ª–æ: –ó–≤–µ–∑–¥–æ—á–∫–∏ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ - {'–ò–°–ü–†–ê–í–õ–ï–ù–û' if no_asterisks_in_desc else '–ù–ï –ò–°–ü–†–ê–í–õ–ï–ù–û'}")
            print(f"‚ùå –ë—ã–ª–æ: –°–ª—É–∂–µ–±–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ - {'–ò–°–ü–†–ê–í–õ–ï–ù–û' if desc_starts_well else '–ù–ï –ò–°–ü–†–ê–í–õ–ï–ù–û'}")
            print(f"‚úÖ –°—Ç–∞–ª–æ: –ß–∏—Å—Ç–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Å—Ç–∞—Ç—å–∏ - {'–î–ê' if desc_score >= 8 else '–ù–ï–¢'}")
                
            return True
            
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç—å–∏")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = test_description_fixes()
    sys.exit(0 if success else 1)
