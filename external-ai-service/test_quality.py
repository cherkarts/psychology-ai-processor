#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ write_adapted_article_quality
"""

import os
import sys
from article_writer import ArticleWriter

def test_quality_generation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –∫–∞—á–µ—Å—Ç–≤–∞"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
    if not os.getenv('OPENAI_API_KEY'):
        print("‚ùå OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return False
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_analysis = {
        'main_theme': '–°—Ç—Ä–µ—Å—Å –∏ —Ç—Ä–µ–≤–æ–≥–∞ –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –º–∏—Ä–µ',
        'main_message': '–°—Ç—Ä–µ—Å—Å –º–æ–∂–Ω–æ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Å –ø–æ–º–æ—â—å—é –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —Ç–µ—Ö–Ω–∏–∫',
        'interesting_facts': [
            '90% –ª—é–¥–µ–π –∏—Å–ø—ã—Ç—ã–≤–∞—é—Ç —Å—Ç—Ä–µ—Å—Å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ',
            '–°—Ç—Ä–µ—Å—Å –≤–ª–∏—è–µ—Ç –Ω–∞ –∏–º–º—É–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É',
            '–ú–µ–¥–∏—Ç–∞—Ü–∏—è —Å–Ω–∏–∂–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å –∫–æ—Ä—Ç–∏–∑–æ–ª–∞ –Ω–∞ 25%'
        ],
        'hidden_truths': [
            '–ü—Å–∏—Ö–æ–ª–æ–≥–∏ –Ω–µ –≤—Å–µ–≥–¥–∞ –≥–æ–≤–æ—Ä—è—Ç –æ –ø–æ–±–æ—á–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–∞—Ö –∞–Ω—Ç–∏–¥–µ–ø—Ä–µ—Å—Å–∞–Ω—Ç–æ–≤',
            '–ú–Ω–æ–≥–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏',
            '–°—Ç—Ä–µ—Å—Å –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã–º –≤ –º–∞–ª—ã—Ö –¥–æ–∑–∞—Ö'
        ],
        'practical_advice': [
            '–¢–µ—Ö–Ω–∏–∫–∞ 4-7-8 –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —É—Å–ø–æ–∫–æ–µ–Ω–∏—è',
            '–ü—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –º—ã—à–µ—á–Ω–∞—è —Ä–µ–ª–∞–∫—Å–∞—Ü–∏—è',
            '–î—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è'
        ]
    }
    
    print("üß™ –¢–ï–°–¢ –ù–û–í–û–ô –§–£–ù–ö–¶–ò–ò –ö–ê–ß–ï–°–¢–í–ê")
    print("=" * 50)
    
    try:
        writer = ArticleWriter()
        print("‚úÖ ArticleWriter –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        print("\nüìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç—å–∏ —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–æ...")
        article = writer.write_adapted_article_quality(test_analysis)
        
        if article:
            print("\n‚úÖ –°–¢–ê–¢–¨–Ø –£–°–ü–ï–®–ù–û –°–ì–ï–ù–ï–†–ò–†–û–í–ê–ù–ê!")
            print("=" * 50)
            print(f"üì∞ –ó–∞–≥–æ–ª–æ–≤–æ–∫: {article['title']}")
            print(f"üìä –î–ª–∏–Ω–∞: {len(article['content'])} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {article['category']}")
            print(f"üîñ –¢–µ–≥–∏: {', '.join(article['tags'])}")
            
            print("\nüìÑ –°–û–î–ï–†–ñ–ê–ù–ò–ï –°–¢–ê–¢–¨–ò:")
            print("-" * 50)
            print(article['content'][:500] + "..." if len(article['content']) > 500 else article['content'])
            
            # –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞
            print("\nüîç –ê–ù–ê–õ–ò–ó –ö–ê–ß–ï–°–¢–í–ê:")
            print("-" * 30)
            
            content = article['content'].lower()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ç–µ—Ö–Ω–∏–∫
            techniques = ['4-7-8', '–ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è', '–¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ', '–º–µ–¥–∏—Ç–∞—Ü–∏—è']
            found_techniques = [t for t in techniques if t in content]
            print(f"‚úÖ –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏: {len(found_techniques)}/{len(techniques)} - {found_techniques}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            stats_words = ['90%', '25%', '–ø—Ä–æ—Ü–µ–Ω—Ç', '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', '–∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è']
            found_stats = [s for s in stats_words if s in content]
            print(f"‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ —Ñ–∞–∫—Ç—ã: {len(found_stats)}/{len(stats_words)} - {found_stats}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
            structure_words = ['–≤–≤–µ–¥–µ–Ω–∏–µ', '–∞–Ω–∞–ª–∏–∑', '—Ç–µ—Ö–Ω–∏–∫–∏', '–≤—ã–≤–æ–¥—ã', '–∑–∞–∫–ª—é—á–µ–Ω–∏–µ']
            found_structure = [s for s in structure_words if s in content]
            print(f"‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞: {len(found_structure)}/{len(structure_words)} - {found_structure}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ–±—â–∏—Ö —Ñ—Ä–∞–∑
            bad_phrases = ['–≤–∞–∂–Ω–æ –ø–æ–º–Ω–∏—Ç—å', '—Å–ª–µ–¥—É–µ—Ç –æ—Ç–º–µ—Ç–∏—Ç—å', '–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–Ω–∏–º–∞—Ç—å']
            found_bad = [p for p in bad_phrases if p in content]
            print(f"‚ùå –û–±—â–∏–µ —Ñ—Ä–∞–∑—ã: {len(found_bad)}/{len(bad_phrases)} - {found_bad}")
            
            # –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞
            quality_score = 0
            if len(found_techniques) >= 2:
                quality_score += 2
            if len(found_stats) >= 1:
                quality_score += 2
            if len(found_structure) >= 3:
                quality_score += 2
            if len(found_bad) == 0:
                quality_score += 2
            if len(article['content']) >= 3000:
                quality_score += 2
            
            print(f"\nüéØ –û–ë–©–ê–Ø –û–¶–ï–ù–ö–ê –ö–ê–ß–ï–°–¢–í–ê: {quality_score}/10")
            
            if quality_score >= 8:
                print("üåü –û–¢–õ–ò–ß–ù–û! –°—Ç–∞—Ç—å—è –≤—ã—Å–æ–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞")
            elif quality_score >= 6:
                print("üëç –•–û–†–û–®–û! –°—Ç–∞—Ç—å—è —Ö–æ—Ä–æ—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞")
            else:
                print("‚ö†Ô∏è –¢–†–ï–ë–£–ï–¢ –£–õ–£–ß–®–ï–ù–ò–Ø")
                
            return True
            
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç—å–∏")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = test_quality_generation()
    sys.exit(0 if success else 1)
