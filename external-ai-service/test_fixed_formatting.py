#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç–µ–π
"""

import os
import sys
from article_writer import ArticleWriter

def test_fixed_formatting():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–µ–π"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
    if not os.getenv('OPENAI_API_KEY'):
        print("‚ùå OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return False
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_analysis = {
        'main_theme': '–°—Ç—Ä–µ—Å—Å –∏ —Ç—Ä–µ–≤–æ–≥–∞ –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –º–∏—Ä–µ',
        'main_message': '–°—Ç—Ä–µ—Å—Å –º–æ–∂–Ω–æ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Å –ø–æ–º–æ—â—å—é –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —Ç–µ—Ö–Ω–∏–∫',
        'interesting_facts': [
            '90% –ª—é–¥–µ–π –∏—Å–ø—ã—Ç—ã–≤–∞—é—Ç —Å—Ç—Ä–µ—Å—Å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ',
            '–°—Ç—Ä–µ—Å—Å –≤–ª–∏—è–µ—Ç –Ω–∞ –∏–º–º—É–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É',
            '–ú–µ–¥–∏—Ç–∞—Ü–∏—è —Å–Ω–∏–∂–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å –∫–æ—Ä—Ç–∏–∑–æ–ª–∞ –Ω–∞ 25%'
        ],
        'hidden_truths': [
            '–ü—Å–∏—Ö–æ–ª–æ–≥–∏ –Ω–µ –≤—Å–µ–≥–¥–∞ –≥–æ–≤–æ—Ä—è—Ç –æ –ø–æ–±–æ—á–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–∞—Ö –∞–Ω—Ç–∏–¥–µ–ø—Ä–µ—Å—Å–∞–Ω—Ç–æ–≤',
            '–ú–Ω–æ–≥–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏',
            '–°—Ç—Ä–µ—Å—Å –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã–º –≤ –º–∞–ª—ã—Ö –¥–æ–∑–∞—Ö'
        ],
        'practical_advice': [
            '–¢–µ—Ö–Ω–∏–∫–∞ 4-7-8 –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —É—Å–ø–æ–∫–æ–µ–Ω–∏—è',
            '–ü—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –º—ã—à–µ—á–Ω–∞—è —Ä–µ–ª–∞–∫—Å–∞—Ü–∏—è',
            '–î—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è'
        ]
    }
    
    print("üß™ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–Ø –°–¢–ê–¢–ï–ô")
    print("=" * 60)
    
    try:
        writer = ArticleWriter()
        print("‚úÖ ArticleWriter –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        print("\nüìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç—å–∏ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º...")
        article = writer.write_adapted_article_enhanced(test_analysis)
        
        if article:
            print("\n‚úÖ –°–¢–ê–¢–¨–Ø –£–°–ü–ï–®–ù–û –°–ì–ï–ù–ï–†–ò–†–û–í–ê–ù–ê –ò –û–¢–§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ê!")
            print("=" * 60)
            
            # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            print(f"üì∞ –ó–∞–≥–æ–ª–æ–≤–æ–∫: {article['title']}")
            print(f"üìè –î–ª–∏–Ω–∞: {len(article['content'])} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"üìù –°–ª–æ–≤: {article['word_count']}")
            print(f"üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {article['category']}")
            print(f"üîñ –¢–µ–≥–∏: {', '.join(article['tags'])}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è
            print(f"\nüìã –ü–û–õ–Ø –°–¢–ê–¢–¨–ò:")
            print(f"üìÑ –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: {article.get('short_description', '–ù–ï–¢')[:100]}...")
            print(f"üìÑ Excerpt: {article.get('excerpt', '–ù–ï–¢')[:100]}...")
            
            # –ê–Ω–∞–ª–∏–∑ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            print("\nüîç –ê–ù–ê–õ–ò–ó –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–Ø:")
            print("-" * 50)
            
            content = article['content']
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ª–∏—à–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            bad_elements = ['**–û–ø–∏—Å–∞–Ω–∏–µ:**', '**–°—Ç–∞—Ç—å—è:**', '**–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:**', '–†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞:', 'A-', 'A+']
            found_bad = [elem for elem in bad_elements if elem in content]
            print(f"‚ùå –õ–∏—à–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã: {len(found_bad)}/{len(bad_elements)} - {found_bad}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º HTML-—Ç–µ–≥–∏
            html_tags = ['<h2>–í–≤–µ–¥–µ–Ω–∏–µ</h2>', '<h2>–ê–Ω–∞–ª–∏–∑ –ø—Ä–∏—á–∏–Ω</h2>', '<h2>–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏</h2>', '<h2>–ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ –∏ –≤—ã–≤–æ–¥—ã</h2>', '<h2>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h2>']
            found_tags = [tag for tag in html_tags if tag in content]
            print(f"‚úÖ HTML-–∑–∞–≥–æ–ª–æ–≤–∫–∏: {len(found_tags)}/{len(html_tags)} - {found_tags}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–µ
            has_description = '<div class="article-description">' in content
            print(f"‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–µ: {'–î–ê' if has_description else '–ù–ï–¢'}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º FAQ
            has_faq = '<h2>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h2>' in content
            print(f"‚úÖ FAQ —Ä–∞–∑–¥–µ–ª: {'–î–ê' if has_faq else '–ù–ï–¢'}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
            structure_ok = len(found_tags) >= 4 and has_description and has_faq
            print(f"‚úÖ –û–±—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: {'–û–¢–õ–ò–ß–ù–û' if structure_ok else '–¢–†–ï–ë–£–ï–¢ –£–õ–£–ß–®–ï–ù–ò–Ø'}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã
            print("\nüìÑ –§–†–ê–ì–ú–ï–ù–¢–´ –°–¢–ê–¢–¨–ò:")
            print("-" * 50)
            print("–ù–ê–ß–ê–õ–û –°–¢–ê–¢–¨–ò (–ø–µ—Ä–≤—ã–µ 600 —Å–∏–º–≤–æ–ª–æ–≤):")
            print(content[:600] + "...")
            
            print("\n–°–ï–†–ï–î–ò–ù–ê –°–¢–ê–¢–¨–ò (—Ñ—Ä–∞–≥–º–µ–Ω—Ç —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏):")
            # –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
            h2_start = content.find('<h2>')
            if h2_start != -1:
                middle_start = max(0, h2_start - 100)
                middle_end = min(len(content), h2_start + 400)
                print("..." + content[middle_start:middle_end] + "...")
            
            print("\n–ö–û–ù–ï–¶ –°–¢–ê–¢–¨–ò (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 400 —Å–∏–º–≤–æ–ª–æ–≤):")
            print("..." + content[-400:])
            
            # –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            formatting_score = 0
            if len(found_bad) == 0:
                formatting_score += 3  # –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ª–∏—à–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            if len(found_tags) >= 4:
                formatting_score += 3  # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ HTML-–∑–∞–≥–æ–ª–æ–≤–∫–∏
            if has_description:
                formatting_score += 2  # –û–ø–∏—Å–∞–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–µ
            if has_faq:
                formatting_score += 2  # FAQ —Ä–∞–∑–¥–µ–ª
            
            print(f"\nüéØ –û–¶–ï–ù–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–Ø: {formatting_score}/10")
            
            if formatting_score >= 9:
                print("üåü –û–¢–õ–ò–ß–ù–û! –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–¥–µ–∞–ª—å–Ω–æ")
            elif formatting_score >= 7:
                print("üëç –•–û–†–û–®–û! –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ª—É—á—à–µ–Ω–æ")
            elif formatting_score >= 5:
                print("‚ö†Ô∏è –£–î–û–í–õ–ï–¢–í–û–†–ò–¢–ï–õ–¨–ù–û! –ï—Å—Ç—å —É–ª—É—á—à–µ–Ω–∏—è, –Ω–æ –Ω—É–∂–Ω—ã –¥–æ—Ä–∞–±–æ—Ç–∫–∏")
            else:
                print("‚ùå –ü–õ–û–•–û! –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–µ–±—É–µ—Ç —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π")
            
            # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏
            print(f"\nüìä –°–†–ê–í–ù–ï–ù–ò–ï –° –ü–†–ï–î–´–î–£–©–ò–ú–ò –ü–†–û–ë–õ–ï–ú–ê–ú–ò:")
            print("-" * 50)
            print(f"‚ùå –ë—ã–ª–æ: –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ **–û–ø–∏—Å–∞–Ω–∏–µ:** - {'–ò–°–ü–†–ê–í–õ–ï–ù–û' if '**–û–ø–∏—Å–∞–Ω–∏–µ:**' not in content else '–ù–ï –ò–°–ü–†–ê–í–õ–ï–ù–û'}")
            print(f"‚ùå –ë—ã–ª–æ: –õ–∏—à–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã (A-, A+, –†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞) - {'–ò–°–ü–†–ê–í–õ–ï–ù–û' if len(found_bad) == 0 else '–ù–ï –ò–°–ü–†–ê–í–õ–ï–ù–û'}")
            print(f"‚ùå –ë—ã–ª–æ: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ - {'–ò–°–ü–†–ê–í–õ–ï–ù–û' if len(found_tags) >= 4 else '–ù–ï –ò–°–ü–†–ê–í–õ–ï–ù–û'}")
            print(f"‚úÖ –°—Ç–∞–ª–æ: –ß–∏—Å—Ç–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å HTML-—Ç–µ–≥–∞–º–∏ - {'–î–ê' if structure_ok else '–ù–ï–¢'}")
                
            return True
            
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç—å–∏")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = test_fixed_formatting()
    sys.exit(0 if success else 1)
