<?php
session_start();
header('Content-Type: application/json');
header('Access-Control-Allow-Origin: *');
header('Access-Control-Allow-Methods: POST');
header('Access-Control-Allow-Headers: Content-Type, X-CSRF-Token');

require_once __DIR__ . '/../includes/functions.php';

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–æ–¥ –∑–∞–ø—Ä–æ—Å–∞
if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
    http_response_code(405);
    echo json_encode(['success' => false, 'message' => 'Method not allowed']);
    exit;
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º CSRF —Ç–æ–∫–µ–Ω
$csrfToken = $_SERVER['HTTP_X_CSRF_TOKEN'] ?? ($_POST['csrf_token'] ?? '');
if (!verifyCSRFToken($csrfToken)) {
    http_response_code(403);
    echo json_encode(['success' => false, 'message' => 'Invalid CSRF token']);
    exit;
}

try {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
    $formData = $_POST;

    // –¢–∏–ø —Ñ–æ—Ä–º—ã
    $formType = isset($formData['form_type']) ? trim($formData['form_type']) : '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è —Ñ–æ—Ä–º–∞';

    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    $errors = [];
    if (mb_strtolower($formType) === mb_strtolower('–°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª')) {
        $deliveryMethod = trim($formData['delivery_method'] ?? '');
        $contactInfo = trim($formData['contact_info'] ?? '');
        if ($deliveryMethod === '') {
            $errors[] = '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è';
        }
        if ($contactInfo === '') {
            $errors[] = '–£–∫–∞–∂–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞';
        }
    } else {
        if (empty($formData['phone'])) {
            $errors[] = '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';
        }
        if (empty($formData['name'])) {
            $errors[] = '–ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ';
        }
        $digits = preg_replace('/[^0-9]/', '', $formData['phone'] ?? '');
        if ($digits !== '' && strlen($digits) < 10) {
            $errors[] = '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞';
        }
    }

    if (!empty($errors)) {
        http_response_code(400);
        echo json_encode(['success' => false, 'message' => implode(', ', $errors)]);
        exit;
    }

    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    $name = e(trim($formData['name'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ'));
    $phone = e(trim($formData['phone'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ'));
    $userMessage = e(trim($formData['message'] ?? ''));
    // –ü—Ä–∏–≤–æ–¥–∏–º –≤—Ä–µ–º—è –∑–≤–æ–Ω–∫–∞ –∫ —á–µ–ª–æ–≤–µ–∫–æ-—á–∏—Ç–∞–µ–º–æ–π –º–µ—Ç–∫–µ
    $timeValue = trim($formData['time'] ?? '');
    $timeLabel = trim($formData['time_label'] ?? '');
    if ($timeLabel === '') {
        $timeMap = [
            'now' => '–ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ —Å–µ–π—á–∞—Å',
            'morning' => '–£—Ç—Ä–æ–º (9-12)',
            'afternoon' => '–î–Ω–µ–º (12-18)',
            'evening' => '–í–µ—á–µ—Ä–æ–º (18-22)'
        ];
        $timeLabel = $timeMap[$timeValue] ?? ($timeValue ?: '–ù–µ —É–∫–∞–∑–∞–Ω–æ');
    }
    $time = e($timeLabel);
    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º username –¢–µ–ª–µ–≥—Ä–∞–º–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (–¥–æ–ø. –∑–∞—â–∏—Ç–∞)
    $deliveryMethod = e(trim($formData['delivery_method'] ?? ''));
    $contactInfoRaw = trim($formData['contact_info'] ?? '');
    if ($deliveryMethod === 'telegram') {
        $username = trim($formData['telegram_username'] ?? $contactInfoRaw);
        // –ó–∞–ø—Ä–µ—â–∞–µ–º –∫–∏—Ä–∏–ª–ª–∏—Ü—É
        if (preg_match('/[–ê-–Ø–∞-—è–Å—ë]/u', $username)) {
            http_response_code(400);
            echo json_encode(['success' => false, 'message' => 'Username –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω–∏—Ü—É, —Ü–∏—Ñ—Ä—ã –∏ _']);
            exit;
        }
        $username = preg_replace('/^@+/', '', $username);
        $username = preg_replace('/[^a-zA-Z0-9_]/', '', $username);
        $contactInfo = '@' . $username;
    } else {
        $contactInfo = e($contactInfoRaw);
    }
    $referrer = isset($_SERVER['HTTP_REFERER']) ? e($_SERVER['HTTP_REFERER']) : '–ü—Ä—è–º–æ–π –ø–µ—Ä–µ—Ö–æ–¥';

    // –§–æ—Ä–º–∏—Ä—É–µ–º HTML —Å–æ–æ–±—â–µ–Ω–∏–µ (parse_mode HTML –≤ sendToTelegram)
    $message = "üîî <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞</b>\n\n";
    $message .= "üìã <b>–¢–∏–ø —Ñ–æ—Ä–º—ã:</b> " . e($formType) . "\n";
    if (!empty($formData['form_source'])) {
        $message .= "üß≠ <b>–ò—Å—Ç–æ—á–Ω–∏–∫ —Ñ–æ—Ä–º—ã:</b> " . e($formData['form_source']) . "\n";
    }
    if (mb_strtolower($formType) === mb_strtolower('–°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª')) {
        $message .= "üìò <b>–ú–∞—Ç–µ—Ä–∏–∞–ª:</b> –ö–∞–∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏\n";
        if ($deliveryMethod) {
            $message .= "üöö <b>–°–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è:</b> {$deliveryMethod}\n";
        }
        if ($contactInfo) {
            $message .= "üë§ <b>–ö–æ–Ω—Ç–∞–∫—Ç:</b> {$contactInfo}\n";
        }
    } else {
        $message .= "üë§ <b>–ò–º—è:</b> {$name}\n";
        $message .= "üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {$phone}\n";
        $message .= "‚è∞ <b>–í—Ä–µ–º—è –∑–≤–æ–Ω–∫–∞:</b> {$time}\n";
        if (!empty($userMessage)) {
            $message .= "üí¨ <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b> {$userMessage}\n";
        }
    }
    $message .= "üåê <b>–ò—Å—Ç–æ—á–Ω–∏–∫:</b> {$referrer}\n";
    $message .= "üìÖ <b>–î–∞—Ç–∞:</b> " . date('d.m.Y H:i:s') . "\n";
    $message .= "üñ•Ô∏è <b>IP:</b> " . e($_SERVER['REMOTE_ADDR']) . "\n";

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
    $telegramResult = sendToTelegram($message);

    // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞—è–≤–∫—É
    logContactAction('contact_form', [
        'name' => $name,
        'phone' => $phone,
        'time' => $time,
        'message' => $userMessage,
        'form_type' => $formType,
        'delivery_method' => $deliveryMethod,
        'contact_info' => $contactInfo,
        'telegram_sent' => $telegramResult
    ]);

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
    echo json_encode([
        'success' => true,
        'message' => '–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.',
        'telegram_sent' => $telegramResult
    ]);

} catch (Exception $e) {
    error_log('Contact form error: ' . $e->getMessage());
    http_response_code(500);
    echo json_encode([
        'success' => false,
        'message' => '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'
    ]);
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ–±—â–µ–π —Ñ—É–Ω–∫—Ü–∏–µ–π sendToTelegram() –∏–∑ includes/functions.php

/**
 * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π
 */
function logContactAction($action, $data)
{
    $logFile = '../logs/actions.log';
    $logDir = dirname($logFile);

    if (!is_dir($logDir)) {
        mkdir($logDir, 0755, true);
    }

    $logEntry = [
        'timestamp' => date('Y-m-d H:i:s'),
        'action' => $action,
        'data' => $data,
        'ip' => $_SERVER['REMOTE_ADDR'],
        'user_agent' => $_SERVER['HTTP_USER_AGENT'] ?? ''
    ];

    file_put_contents($logFile, json_encode($logEntry) . "\n", FILE_APPEND | LOCK_EX);
}
?>