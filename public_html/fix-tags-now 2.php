<?php
/**
 * –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–≥–æ–≤ —Å –¥—É–±–ª—è–º–∏
 * –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ–¥–∏–Ω —Ä–∞–∑ —á—Ç–æ–±—ã –∏—Å–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ —Å—Ç–∞—Ç—å–∏
 */

error_reporting(E_ALL);
ini_set('display_errors', 1);

echo "<h1>–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è —Ç–µ–≥–æ–≤</h1>";
echo "<style>
    body { font-family: Arial, sans-serif; padding: 20px; background: #f5f5f5; }
    .fixed { background: #d4edda; padding: 10px; margin: 10px 0; border-left: 4px solid #28a745; }
    .ok { background: #d1ecf1; padding: 10px; margin: 10px 0; border-left: 4px solid #17a2b8; }
    .error { background: #f8d7da; padding: 10px; margin: 10px 0; border-left: 4px solid #dc3545; }
    pre { background: #fff; padding: 10px; border-radius: 4px; overflow-x: auto; }
</style>";

require_once __DIR__ . '/includes/Database.php';

try {
  $db = Database::getInstance();
  $pdo = $db->getConnection();

  echo "<p>–ù–∞—á–∏–Ω–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É...</p>";

  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ç—å–∏ —Å —Ç–µ–≥–∞–º–∏
  $stmt = $pdo->query("SELECT id, title, slug, tags FROM articles WHERE tags IS NOT NULL AND tags != '' AND tags != 'null'");
  $articles = $stmt->fetchAll();

  echo "<p><strong>–ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç–µ–π —Å —Ç–µ–≥–∞–º–∏: " . count($articles) . "</strong></p>";

  $fixed = 0;
  $checked = 0;

  foreach ($articles as $article) {
    $checked++;
    $id = $article['id'];
    $title = $article['title'];
    $slug = $article['slug'];
    $tagsJson = $article['tags'];

    echo "<div style='background: white; padding: 15px; margin: 15px 0; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);'>";
    echo "<h3>[$checked] " . htmlspecialchars($title) . "</h3>";
    echo "<p><small>ID: $id | Slug: $slug</small></p>";
    echo "<p><strong>–¢–µ–≥–∏ (JSON):</strong> <code>" . htmlspecialchars($tagsJson) . "</code></p>";

    // –î–µ–∫–æ–¥–∏—Ä—É–µ–º JSON
    $tagsArray = json_decode($tagsJson, true);

    if (!is_array($tagsArray)) {
      echo "<div class='error'>‚ö†Ô∏è –¢–µ–≥–∏ –Ω–µ —è–≤–ª—è—é—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º</div>";
      echo "</div>";
      continue;
    }

    echo "<p><strong>–¢–µ–≥–∏ (–º–∞—Å—Å–∏–≤):</strong> " . implode(', ', $tagsArray) . "</p>";
    echo "<p><strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</strong> " . count($tagsArray) . "</p>";

    // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    $originalCount = count($tagsArray);
    $uniqueTags = array_values(array_unique(array_filter(array_map('trim', $tagsArray), fn($v) => $v !== '')));
    $uniqueCount = count($uniqueTags);

    if ($originalCount !== $uniqueCount) {
      echo "<div class='fixed'>";
      echo "<strong>üîß –ù–∞–π–¥–µ–Ω—ã –¥—É–±–ª–∏–∫–∞—Ç—ã!</strong><br>";
      echo "–ë—ã–ª–æ —Ç–µ–≥–æ–≤: <strong>$originalCount</strong><br>";
      echo "–°—Ç–∞–ª–æ —Ç–µ–≥–æ–≤: <strong>$uniqueCount</strong><br>";
      echo "–û—Ä–∏–≥–∏–Ω–∞–ª: <code>" . implode(', ', $tagsArray) . "</code><br>";
      echo "–û—á–∏—â–µ–Ω–æ: <code>" . implode(', ', $uniqueTags) . "</code><br>";

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ç–µ–≥–∏
      $newTagsJson = json_encode($uniqueTags, JSON_UNESCAPED_UNICODE);
      $updateStmt = $pdo->prepare("UPDATE articles SET tags = ? WHERE id = ?");
      $updateStmt->execute([$newTagsJson, $id]);

      echo "<strong>‚úÖ –¢–µ–≥–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ –ë–î!</strong><br>";
      echo "–ù–æ–≤—ã–π JSON: <code>" . htmlspecialchars($newTagsJson) . "</code>";
      echo "</div>";
      $fixed++;
    } else {
      echo "<div class='ok'>‚úì –î—É–±–ª–∏–∫–∞—Ç–æ–≤ –Ω–µ—Ç, –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ</div>";
    }

    echo "</div>";

    // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    if ($checked >= 50) {
      echo "<p><strong>‚ö†Ô∏è –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç 50 —Å—Ç–∞—Ç–µ–π. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.</strong></p>";
      break;
    }
  }

  echo "<hr style='margin: 30px 0;'>";
  echo "<div style='background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);'>";
  echo "<h2>üìä –ò–¢–û–ì–û</h2>";
  echo "<p><strong>–ü—Ä–æ–≤–µ—Ä–µ–Ω–æ —Å—Ç–∞—Ç–µ–π:</strong> $checked</p>";
  echo "<p><strong>–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Å—Ç–∞—Ç–µ–π:</strong> $fixed</p>";

  if ($fixed > 0) {
    echo "<div class='fixed' style='margin-top: 20px;'>";
    echo "<strong>‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!</strong><br>";
    echo "–¢–µ–ø–µ—Ä—å –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç–∞—Ç–µ–π - —Ç–µ–≥–∏ –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ.";
    echo "</div>";
  } else {
    echo "<div class='ok' style='margin-top: 20px;'>";
    echo "<strong>‚úì –í—Å–µ —Å—Ç–∞—Ç—å–∏ –≤ –ø–æ—Ä—è–¥–∫–µ!</strong><br>";
    echo "–î—É–±–ª–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.";
    echo "</div>";
  }

  echo "</div>";

  echo "<p style='margin-top: 20px; color: #999;'><small>–≠—Ç–æ—Ç —Ñ–∞–π–ª –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: fix-tags-now.php</small></p>";

} catch (Exception $e) {
  echo "<div class='error'>";
  echo "<strong>‚ùå –û—à–∏–±–∫–∞:</strong> " . htmlspecialchars($e->getMessage());
  echo "</div>";
}
?>
