<?php
$config = require_once 'config.php';
$db = $config['database'];

try {
  $dsn = "mysql:host={$db['host']};port={$db['port']};dbname={$db['dbname']};charset={$db['charset']}";
  $pdo = new PDO($dsn, $db['username'], $db['password'], $db['options']);

  echo "<h2>üîç –î–ï–ë–ê–ì –í–†–ï–ú–ï–ù–ò –ß–¢–ï–ù–ò–Ø</h2>";

  // –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ —á—Ç–µ–Ω–∏—è (–∫–∞–∫ –≤ –∫–æ–¥–µ)
  function calculateReadingTime($content)
  {
    $wordsPerMinute = 200; // Average reading speed
    $text = strip_tags($content);
    $wordCount = str_word_count($text, 0, '–ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–©–™–´–¨–≠–Æ–Ø–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è');
    $minutes = ceil($wordCount / $wordsPerMinute);

    if ($minutes < 1) {
      return '1 –º–∏–Ω—É—Ç–∞';
    } elseif ($minutes == 1) {
      return '1 –º–∏–Ω—É—Ç–∞';
    } elseif ($minutes < 5) {
      return $minutes . ' –º–∏–Ω—É—Ç—ã';
    } else {
      return $minutes . ' –º–∏–Ω—É—Ç';
    }
  }

  // –ü–æ–ª—É—á–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç–∞—Ç–µ–π
  $stmt = $pdo->query("
        SELECT a.id, a.title, a.content, a.excerpt, ac.name as category_name
        FROM articles a 
        LEFT JOIN article_categories ac ON a.category_id = ac.id 
        ORDER BY a.created_at DESC 
        LIMIT 5
    ");
  $articles = $stmt->fetchAll();

  echo "<h3>üìä –ê–Ω–∞–ª–∏–∑ –≤—Ä–µ–º–µ–Ω–∏ —á—Ç–µ–Ω–∏—è –¥–ª—è —Å—Ç–∞—Ç–µ–π:</h3>";

  foreach ($articles as $article) {
    echo "<div style='border: 1px solid #ccc; margin: 10px 0; padding: 15px;'>";
    echo "<h4>–°—Ç–∞—Ç—å—è ID: {$article['id']}</h4>";
    echo "<p><strong>–ó–∞–≥–æ–ª–æ–≤–æ–∫:</strong> " . htmlspecialchars(mb_substr($article['title'], 0, 100)) . "...</p>";

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º content
    $content = $article['content'];
    echo "<p><strong>Content –¥–ª–∏–Ω–∞:</strong> " . strlen($content) . " —Å–∏–º–≤–æ–ª–æ–≤</p>";
    echo "<p><strong>Content –ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤:</strong> " . htmlspecialchars(mb_substr($content, 0, 200)) . "...</p>";

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
    if (strpos($content, '–†') !== false && strpos($content, '–°') !== false) {
      echo "<p style='color: red;'><strong>‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π –≤ content!</strong></p>";
    }

    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –≤—Ä–µ–º—è —á—Ç–µ–Ω–∏—è
    $readingTime = calculateReadingTime($content);
    echo "<p><strong>–í—Ä–µ–º—è —á—Ç–µ–Ω–∏—è:</strong> {$readingTime}</p>";

    // –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
    $text = strip_tags($content);
    $wordCount = str_word_count($text, 0, '–ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–©–™–´–¨–≠–Æ–Ø–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è');
    echo "<p><strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤:</strong> {$wordCount}</p>";
    echo "<p><strong>–¢–µ–∫—Å—Ç –±–µ–∑ —Ç–µ–≥–æ–≤ (–ø–µ—Ä–≤—ã–µ 300 —Å–∏–º–≤–æ–ª–æ–≤):</strong> " . htmlspecialchars(mb_substr($text, 0, 300)) . "...</p>";

    echo "</div>";
  }

} catch (Exception $e) {
  echo "<h3>‚ùå –û—à–∏–±–∫–∞:</h3>";
  echo "<p>" . $e->getMessage() . "</p>";
}
?>