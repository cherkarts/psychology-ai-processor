<?php
$config = require_once 'config.php';
$db = $config['database'];

try {
  $dsn = "mysql:host={$db['host']};port={$db['port']};dbname={$db['dbname']};charset={$db['charset']}";
  $pdo = new PDO($dsn, $db['username'], $db['password'], $db['options']);

  // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç UTF-8
  $pdo->exec("SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci");

  echo "<h2>üß™ –¢–ï–°–¢ –°–û–•–†–ê–ù–ï–ù–ò–Ø –°–¢–ê–¢–¨–ò</h2>";

  // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
  $testData = [
    'title' => '–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç–∞—Ç—å—è —Å —Ä—É—Å—Å–∫–∏–º —Ç–µ–∫—Å—Ç–æ–º',
    'content' => '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç–∞—Ç—å–∏ —Å —Ä—É—Å—Å–∫–∏–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏: –ø—Ä–∏–≤–µ—Ç, –º–∏—Ä!',
    'author' => '–¢–µ—Å—Ç–æ–≤—ã–π –∞–≤—Ç–æ—Ä',
    'excerpt' => '–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏',
    'tags' => '—Ç–µ—Å—Ç, —Ä—É—Å—Å–∫–∏–π, –∫–æ–¥–∏—Ä–æ–≤–∫–∞',
    'category_id' => 1
  ];

  echo "<h3>üìù –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:</h3>";
  echo "<pre>" . print_r($testData, true) . "</pre>";

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞ (–∫–∞–∫ –≤ API)
  $processText = function ($text) {
    if (empty($text))
      return $text;

    $text = trim($text);

    if (mb_check_encoding($text, 'UTF-8')) {
      return $text;
    }

    $fixed = mb_convert_encoding($text, 'UTF-8', 'auto');
    return $fixed;
  };

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  $processedData = [
    'title' => $processText($testData['title']),
    'content' => $processText($testData['content']),
    'author' => $processText($testData['author']),
    'excerpt' => $processText($testData['excerpt']),
    'tags' => $processText($testData['tags']),
    'category_id' => $testData['category_id']
  ];

  echo "<h3>üîß –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</h3>";
  echo "<pre>" . print_r($processedData, true) . "</pre>";

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–≥–∏
  $tagsValue = null;
  if ($processedData['tags'] !== '') {
    $parts = array_values(array_filter(array_map('trim', explode(',', $processedData['tags'])), fn($v) => $v !== ''));
    $parts = array_values(array_unique($parts));
    $tagsValue = json_encode($parts, JSON_UNESCAPED_UNICODE);
  }

  echo "<h3>üè∑Ô∏è –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ç–µ–≥–∏:</h3>";
  echo "<p>–ò—Å—Ö–æ–¥–Ω—ã–µ: {$processedData['tags']}</p>";
  echo "<p>JSON: {$tagsValue}</p>";

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç–∞—Ç—å—é
  echo "<h3>üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–∞–∑—É...</h3>";

  $sql = "INSERT INTO articles (title, content, author, excerpt, tags, category_id, is_active, created_at) VALUES (?, ?, ?, ?, ?, ?, 1, NOW())";
  $stmt = $pdo->prepare($sql);
  $result = $stmt->execute([
    $processedData['title'],
    $processedData['content'],
    $processedData['author'],
    $processedData['excerpt'],
    $tagsValue,
    $processedData['category_id']
  ]);

  if ($result) {
    $newId = $pdo->lastInsertId();
    echo "<p>‚úÖ –°—Ç–∞—Ç—å—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ —Å ID: {$newId}</p>";

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª–æ—Å—å
    $stmt = $pdo->prepare("SELECT * FROM articles WHERE id = ?");
    $stmt->execute([$newId]);
    $saved = $stmt->fetch();

    echo "<h3>üìñ –ß—Ç–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª–æ—Å—å –≤ –±–∞–∑–µ:</h3>";
    echo "<table border='1' style='border-collapse: collapse;'>";
    echo "<tr><th>–ü–æ–ª–µ</th><th>–ó–Ω–∞—á–µ–Ω–∏–µ</th></tr>";
    foreach ($saved as $field => $value) {
      if (in_array($field, ['title', 'content', 'author', 'excerpt', 'tags'])) {
        $display = htmlspecialchars($value);
        echo "<tr><td><strong>{$field}</strong></td><td>{$display}</td></tr>";
      }
    }
    echo "</table>";

    // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç–∞—Ç—å—é
    $pdo->prepare("DELETE FROM articles WHERE id = ?")->execute([$newId]);
    echo "<p>üóëÔ∏è –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç–∞—Ç—å—è —É–¥–∞–ª–µ–Ω–∞</p>";

  } else {
    echo "<p>‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è</p>";
  }

} catch (Exception $e) {
  echo "<h3>‚ùå –û—à–∏–±–∫–∞:</h3>";
  echo "<p>" . $e->getMessage() . "</p>";
}
?>