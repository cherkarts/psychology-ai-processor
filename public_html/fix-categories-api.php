<?php
$config = require_once 'config.php';
$db = $config['database'];

try {
  $dsn = "mysql:host={$db['host']};port={$db['port']};dbname={$db['dbname']};charset={$db['charset']}";
  $pdo = new PDO($dsn, $db['username'], $db['password'], $db['options']);

  echo "<h2>–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ API –∫–∞—Ç–µ–≥–æ—Ä–∏–π</h2>";

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  $categories_exists = false;
  $article_categories_exists = false;

  try {
    $pdo->query("SELECT 1 FROM categories LIMIT 1");
    $categories_exists = true;
    echo "<p>‚úÖ –¢–∞–±–ª–∏—Ü–∞ 'categories' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</p>";
  } catch (Exception $e) {
    echo "<p>‚ùå –¢–∞–±–ª–∏—Ü–∞ 'categories' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</p>";
  }

  try {
    $pdo->query("SELECT 1 FROM article_categories LIMIT 1");
    $article_categories_exists = true;
    echo "<p>‚úÖ –¢–∞–±–ª–∏—Ü–∞ 'article_categories' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</p>";
  } catch (Exception $e) {
    echo "<p>‚ùå –¢–∞–±–ª–∏—Ü–∞ 'article_categories' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</p>";
  }

  if ($categories_exists && !$article_categories_exists) {
    echo "<h3>–†–µ—à–µ–Ω–∏–µ: –ü–µ—Ä–µ–∏–º–µ–Ω—É–µ–º —Ç–∞–±–ª–∏—Ü—É 'categories' –≤ 'article_categories'</h3>";

    // –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
    $pdo->exec("RENAME TABLE categories TO article_categories");
    echo "<p>‚úÖ –¢–∞–±–ª–∏—Ü–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∞: categories ‚Üí article_categories</p>";

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    $stmt = $pdo->query("SELECT * FROM article_categories");
    $categories = $stmt->fetchAll(PDO::FETCH_ASSOC);
    echo "<p>‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞: –Ω–∞–π–¥–µ–Ω–æ " . count($categories) . " –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü–µ</p>";

    echo "<h3>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ article_categories:</h3>";
    echo "<table border='1'><tr><th>ID</th><th>Name</th><th>Slug</th><th>Created</th></tr>";
    foreach ($categories as $cat) {
      echo "<tr><td>{$cat['id']}</td><td>{$cat['name']}</td><td>{$cat['slug']}</td><td>{$cat['created_at']}</td></tr>";
    }
    echo "</table>";

    echo "<p><strong>üéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –∞–¥–º–∏–Ω–∫–∞ –¥–æ–ª–∂–Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.</strong></p>";

  } elseif (!$categories_exists && !$article_categories_exists) {
    echo "<h3>‚ùå –ù–∏ –æ–¥–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!</h3>";
    echo "<p>–ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –∫–∞—Ç–µ–≥–æ—Ä–∏–π.</p>";

  } elseif ($categories_exists && $article_categories_exists) {
    echo "<h3>‚ö†Ô∏è –û–±–µ —Ç–∞–±–ª–∏—Ü—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç!</h3>";
    echo "<p>–ù—É–∂–Ω–æ —Ä–µ—à–∏—Ç—å, –∫–∞–∫—É—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.</p>";

  } else {
    echo "<h3>‚úÖ –¢–∞–±–ª–∏—Ü–∞ 'article_categories' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</h3>";
    echo "<p>API –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.</p>";
  }

} catch (Exception $e) {
  echo "–û—à–∏–±–∫–∞: " . $e->getMessage();
}
?>