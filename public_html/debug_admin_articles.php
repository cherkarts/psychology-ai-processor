<?php
/**
 * –û—Ç–ª–∞–¥–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–µ–π –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
 */

echo "<h1>üîç –û—Ç–ª–∞–¥–∫–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ —Å—Ç–∞—Ç–µ–π</h1>";

try {
  // –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
  $config = require_once 'config.php';

  // –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
  $db_config = $config['database'];
  $dsn = "mysql:host={$db_config['host']};port={$db_config['port']};dbname={$db_config['dbname']};charset={$db_config['charset']}";
  $username = $db_config['username'];
  $password = $db_config['password'];
  $options = $db_config['options'];

  // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
  $pdo = new PDO($dsn, $username, $password, $options);

  echo "<div style='background: #d4edda; padding: 15px; border-radius: 5px; margin: 10px 0;'>";
  echo "<h3>‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ!</h3>";
  echo "</div>";

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π
  $count_sql = "SELECT COUNT(*) as total FROM articles";
  $count_stmt = $pdo->prepare($count_sql);
  $count_stmt->execute();
  $count_result = $count_stmt->fetch(PDO::FETCH_ASSOC);

  echo "<h2>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å—Ç–∞—Ç–µ–π:</h2>";
  echo "<p><strong>–í—Å–µ–≥–æ —Å—Ç–∞—Ç–µ–π –≤ –ë–î:</strong> {$count_result['total']}</p>";

  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ç—å–∏
  $sql = "SELECT a.*, ac.name as category_name 
            FROM articles a 
            LEFT JOIN article_categories ac ON a.category_id = ac.id 
            ORDER BY a.created_at DESC";
  $stmt = $pdo->prepare($sql);
  $stmt->execute();
  $rawArticles = $stmt->fetchAll(PDO::FETCH_ASSOC);

  echo "<p><strong>–°—Ç–∞—Ç–µ–π –ø–æ–ª—É—á–µ–Ω–æ –∏–∑ –ë–î:</strong> " . count($rawArticles) . "</p>";

  if (empty($rawArticles)) {
    echo "<div style='background: #f8d7da; padding: 15px; border-radius: 5px; margin: 10px 0;'>";
    echo "<h3>‚ùå –°—Ç–∞—Ç—å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ë–î</h3>";
    echo "</div>";
    exit;
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Å—Ç–∞—Ç–µ–π
  echo "<h2>üìã –ü–µ—Ä–≤—ã–µ 5 —Å—Ç–∞—Ç–µ–π –∏–∑ –ë–î:</h2>";
  echo "<table style='width: 100%; border-collapse: collapse; margin: 20px 0;'>";
  echo "<tr style='background: #f8f9fa;'>";
  echo "<th style='border: 1px solid #dee2e6; padding: 8px;'>ID</th>";
  echo "<th style='border: 1px solid #dee2e6; padding: 8px;'>–ù–∞–∑–≤–∞–Ω–∏–µ</th>";
  echo "<th style='border: 1px solid #dee2e6; padding: 8px;'>–ê–≤—Ç–æ—Ä</th>";
  echo "<th style='border: 1px solid #dee2e6; padding: 8px;'>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</th>";
  echo "<th style='border: 1px solid #dee2e6; padding: 8px;'>–ê–∫—Ç–∏–≤–Ω–∞</th>";
  echo "<th style='border: 1px solid #dee2e6; padding: 8px;'>–î–∞—Ç–∞</th>";
  echo "</tr>";

  for ($i = 0; $i < min(5, count($rawArticles)); $i++) {
    $article = $rawArticles[$i];
    $title = htmlspecialchars($article['title'] ?? '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è');
    $author = htmlspecialchars($article['author'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω');
    $category = htmlspecialchars($article['category_name'] ?? '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');
    $active = $article['is_active'] ? '‚úÖ' : '‚ùå';
    $date = $article['created_at'] ? date('d.m.Y H:i', strtotime($article['created_at'])) : '–ù–µ —É–∫–∞–∑–∞–Ω–∞';

    echo "<tr>";
    echo "<td style='border: 1px solid #dee2e6; padding: 8px;'>{$article['id']}</td>";
    echo "<td style='border: 1px solid #dee2e6; padding: 8px;'>{$title}</td>";
    echo "<td style='border: 1px solid #dee2e6; padding: 8px;'>{$author}</td>";
    echo "<td style='border: 1px solid #dee2e6; padding: 8px;'>{$category}</td>";
    echo "<td style='border: 1px solid #dee2e6; padding: 8px;'>{$active}</td>";
    echo "<td style='border: 1px solid #dee2e6; padding: 8px;'>{$date}</td>";
    echo "</tr>";
  }

  echo "</table>";

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
  echo "<h2>üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏:</h2>";
  $test_article = $rawArticles[0];
  echo "<div style='background: #f8f9fa; padding: 10px; border-radius: 5px; margin: 10px 0; border: 1px solid #dee2e6;'>";
  echo "<p><strong>–ù–∞–∑–≤–∞–Ω–∏–µ (–ø–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤):</strong></p>";
  echo "<pre>" . htmlspecialchars(mb_substr($test_article['title'] ?? '', 0, 100)) . "</pre>";
  echo "<p><strong>–ê–≤—Ç–æ—Ä:</strong></p>";
  echo "<pre>" . htmlspecialchars($test_article['author'] ?? '') . "</pre>";
  echo "<p><strong>–ö–æ–Ω—Ç–µ–Ω—Ç (–ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤):</strong></p>";
  echo "<pre>" . htmlspecialchars(mb_substr($test_article['content'] ?? '', 0, 200)) . "</pre>";
  echo "</div>";

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å JSON
  echo "<h2>üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ JSON –ø–æ–ª–µ–π:</h2>";
  if (isset($test_article['tags']) && !empty($test_article['tags'])) {
    echo "<p><strong>–¢–µ–≥–∏ (raw):</strong> " . htmlspecialchars($test_article['tags']) . "</p>";
    $tags_decoded = json_decode($test_article['tags'], true);
    if ($tags_decoded !== null) {
      echo "<p><strong>–¢–µ–≥–∏ (decoded):</strong> " . implode(', ', $tags_decoded) . "</p>";
    } else {
      echo "<p><strong>–û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–≥–æ–≤:</strong> " . json_last_error_msg() . "</p>";
    }
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
  echo "<h2>üîç –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã articles:</h2>";
  $structure_sql = "DESCRIBE articles";
  $structure_stmt = $pdo->prepare($structure_sql);
  $structure_stmt->execute();
  $structure = $structure_stmt->fetchAll(PDO::FETCH_ASSOC);

  echo "<table style='width: 100%; border-collapse: collapse; margin: 20px 0;'>";
  echo "<tr style='background: #f8f9fa;'>";
  echo "<th style='border: 1px solid #dee2e6; padding: 8px;'>–ü–æ–ª–µ</th>";
  echo "<th style='border: 1px solid #dee2e6; padding: 8px;'>–¢–∏–ø</th>";
  echo "<th style='border: 1px solid #dee2e6; padding: 8px;'>Null</th>";
  echo "<th style='border: 1px solid #dee2e6; padding: 8px;'>–ö–ª—é—á</th>";
  echo "<th style='border: 1px solid #dee2e6; padding: 8px;'>–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é</th>";
  echo "</tr>";

  foreach ($structure as $field) {
    echo "<tr>";
    echo "<td style='border: 1px solid #dee2e6; padding: 8px;'>{$field['Field']}</td>";
    echo "<td style='border: 1px solid #dee2e6; padding: 8px;'>{$field['Type']}</td>";
    echo "<td style='border: 1px solid #dee2e6; padding: 8px;'>{$field['Null']}</td>";
    echo "<td style='border: 1px solid #dee2e6; padding: 8px;'>{$field['Key']}</td>";
    echo "<td style='border: 1px solid #dee2e6; padding: 8px;'>{$field['Default']}</td>";
    echo "</tr>";
  }

  echo "</table>";

  echo "<div style='background: #d4edda; padding: 15px; border-radius: 5px; margin: 20px 0;'>";
  echo "<h3>üéØ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</h3>";
  echo "<p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã—à–µ. –ï—Å–ª–∏ —Å—Ç–∞—Ç—å–∏ –µ—Å—Ç—å –≤ –ë–î, –Ω–æ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏, –ø—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤:</p>";
  echo "<ul>";
  echo "<li>–û–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –≤ admin/articles.php</li>";
  echo "<li>–ü—Ä–æ–±–ª–µ–º–∞—Ö —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏</li>";
  echo "<li>–û—à–∏–±–∫–∞—Ö –≤ JavaScript</li>";
  echo "<li>–ü—Ä–æ–±–ª–µ–º–∞—Ö —Å —Å–µ—Å—Å–∏–µ–π –∏–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π</li>";
  echo "</ul>";
  echo "</div>";

} catch (PDOException $e) {
  echo "<div style='background: #f8d7da; padding: 15px; border-radius: 5px; margin: 10px 0;'>";
  echo "<h3>‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö</h3>";
  echo "<p><strong>–û—à–∏–±–∫–∞:</strong> " . $e->getMessage() . "</p>";
  echo "</div>";
} catch (Exception $e) {
  echo "<div style='background: #f8d7da; padding: 15px; border-radius: 5px; margin: 10px 0;'>";
  echo "<h3>‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞</h3>";
  echo "<p><strong>–û—à–∏–±–∫–∞:</strong> " . $e->getMessage() . "</p>";
  echo "</div>";
}
?>